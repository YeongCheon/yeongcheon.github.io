<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gcp Gae Golang on YeongCheon Tech Blog</title>
    <link>http://yeongcheon.github.io/categories/gcp-gae-golang/</link>
    <description>Recent content in Gcp Gae Golang on YeongCheon Tech Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-ko</language>
    <lastBuildDate>Sun, 10 Jun 2018 12:00:00 +0900</lastBuildDate>
    
	<atom:link href="http://yeongcheon.github.io/categories/gcp-gae-golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Google App Engine Image API 삽질 후기</title>
      <link>http://yeongcheon.github.io/posts/2018-06-10-gae-image-api/</link>
      <pubDate>Sun, 10 Jun 2018 12:00:00 +0900</pubDate>
      
      <guid>http://yeongcheon.github.io/posts/2018-06-10-gae-image-api/</guid>
      <description>오늘은 GAE에서 제공하는 Image API를 사용하면서 겪은 어려움과 후기를 공유하고자 한다.
요구사항  GAE를 통해 업로드 된 이미지를 Google Cloud Storage(이하 GCS)에 보관, 파일 관련 정보를 datastore에 별도로 저장한다(업로드 한 사용자, 업로드 파일명, 업로드 날짜 등등). 이 이미지를 웹사이트를 통해 서비스를 하고싶다. 이 이미지는 사이즈가 모두 제각각인데 DSLR로 찍은 수십메가짜리 이미지부터 조그마한 썸네일 이미지까지 크기가 천차만별이다. 동일한 이미지를 여러가지 사이즈로 출력해야 한다. 가령 DSLR로 찍은 이미지를 제공할 경우 우선 100px짜리 썸네일로 제공, 사용자가 썸네일을 클릭할 경우 이미지의 원본을 보여주고 싶다.</description>
    </item>
    
    <item>
      <title>datastore에서 projection query 실행 시 time.Time이 int64로 반환되는 문제 해결하기</title>
      <link>http://yeongcheon.github.io/posts/2018-05-12-datastore-projection-error/</link>
      <pubDate>Sat, 12 May 2018 13:00:00 +0900</pubDate>
      
      <guid>http://yeongcheon.github.io/posts/2018-05-12-datastore-projection-error/</guid>
      <description>요구사항 datastore에 내 프로필을 방문한 사용자의 ID와 방문시간을 각각 string, time.Time 형식으로 저장하고 있다. 구조체로 보면 다음과 같다.
type Visitor struct { UserId string //조회한 프로필의 Id 	VisitorId string //방문자 Id 	VisitTime time.Time } 이 데이터를 단순히 조회하면 한 사용자가 나를 여러번 방문할 경우 결과 리스트에 그 방문자가 여러번 출력된다. 나는 동일한 사용자가 여러번 반복해도 가장 최근에 방문한 기록만 보길 원했다. 즉 datastore에서 SQL 문법의 group by를 사용하고 싶었다.</description>
    </item>
    
  </channel>
</rss>