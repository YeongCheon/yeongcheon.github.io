<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Emacs - 태그 - 김영천 블로그</title><link>https://yeongcheon.github.io/tags/emacs/</link><description>Emacs - 태그 - 김영천 블로그</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Sat, 24 Sep 2022 00:00:00 +0900</lastBuildDate><atom:link href="https://yeongcheon.github.io/tags/emacs/" rel="self" type="application/rss+xml"/><item><title>Emacs LSP 환경에서 Rust 자동완성 안되는 문제 수정</title><link>https://yeongcheon.github.io/posts/2022-09-24-rust-lsp-autocomplete-issue/</link><pubDate>Sat, 24 Sep 2022 00:00:00 +0900</pubDate><author>YeongCheon Kim</author><guid>https://yeongcheon.github.io/posts/2022-09-24-rust-lsp-autocomplete-issue/</guid><description><![CDATA[<div id="outline-container-headline-1" class="outline-2">
<h2 id="headline-1">
증상
</h2>
<div id="outline-text-headline-1" class="outline-text-2">
<p>Ubuntu + Emacs(lsp-mode) 조합으로 Rust 개발환경을 셋팅하는 도중 <code>wasm</code> 관련 코드가 자동완성이 안되는 문제가 발생했다.</p>
</div>
</div>
<div id="outline-container-headline-2" class="outline-2">
<h2 id="headline-2">
Sample Code
</h2>
<div id="outline-text-headline-2" class="outline-text-2">
<div id="outline-container-headline-3" class="outline-3">
<h3 id="headline-3">
Cargo.toml
</h3>
<div id="outline-text-headline-3" class="outline-text-3">
<div class="src src-rust">
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-rust" data-lang="rust"><span class="line"><span class="cl"><span class="p">[</span><span class="n">package</span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">name</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;helloWasm&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">version</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;0.1.0&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">edition</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;2021&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>#<span class="w"> </span><span class="n">See</span><span class="w"> </span><span class="n">more</span><span class="w"> </span><span class="n">keys</span><span class="w"> </span><span class="n">and</span><span class="w"> </span><span class="n">their</span><span class="w"> </span><span class="n">definitions</span><span class="w"> </span><span class="n">at</span><span class="w"> </span><span class="n">https</span>:<span class="c1">//doc.rust-lang.org/cargo/reference/manifest.html
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">[</span><span class="n">lib</span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">crate</span><span class="o">-</span><span class="k">type</span> <span class="o">=</span><span class="w"> </span><span class="p">[</span><span class="s">&#34;cdylib&#34;</span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">[</span><span class="n">dependencies</span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">js</span><span class="o">-</span><span class="n">sys</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;0.3.60&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">wasm</span><span class="o">-</span><span class="n">bindgen</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;0.2.83&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">[</span><span class="n">dependencies</span><span class="p">.</span><span class="n">web</span><span class="o">-</span><span class="n">sys</span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">version</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&#34;0.3.60&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">features</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">[</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="na">&#39;CanvasRenderingContext2d&#39;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="na">&#39;Document&#39;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="na">&#39;Element&#39;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="na">&#39;HtmlCanvasElement&#39;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="na">&#39;Window&#39;</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">]</span></span></span></code></pre></td></tr></table>
</div>
</div>
</div>
</div>
</div>
<div id="outline-container-headline-4" class="outline-3">
<h3 id="headline-4">
lib.rs
</h3>
<div id="outline-text-headline-4" class="outline-text-3">
<div class="src src-rust">
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-rust" data-lang="rust"><span class="line"><span class="cl"><span class="cp">#[wasm_bindgen]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">pub</span><span class="w"> </span><span class="k">fn</span> <span class="nf">start</span><span class="p">()</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">let</span><span class="w"> </span><span class="n">window</span>: <span class="nc">Window</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">web_sys</span>::<span class="n">window</span><span class="p">().</span><span class="n">unwrap</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">let</span><span class="w"> </span><span class="n">document</span>: <span class="nc">Document</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">window</span><span class="p">.</span><span class="n">document</span><span class="p">().</span><span class="n">unwrap</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">let</span><span class="w"> </span><span class="n">canvas</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">document</span><span class="p">.</span><span class="n">get_element_by_id</span><span class="p">(</span><span class="s">&#34;canvas&#34;</span><span class="p">).</span><span class="n">unwrap</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">let</span><span class="w"> </span><span class="n">canvas</span>: <span class="nc">web_sys</span>::<span class="n">HtmlCanvasElement</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">canvas</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="p">.</span><span class="n">dyn_into</span>::<span class="o">&lt;</span><span class="n">web_sys</span>::<span class="n">HtmlCanvasElement</span><span class="o">&gt;</span><span class="p">()</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="p">.</span><span class="n">map_err</span><span class="p">(</span><span class="o">|</span><span class="n">_</span><span class="o">|</span><span class="w"> </span><span class="p">())</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="p">.</span><span class="n">unwrap</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">let</span><span class="w"> </span><span class="n">context</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">canvas</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="p">.</span><span class="n">get_context</span><span class="p">(</span><span class="s">&#34;2d&#34;</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="p">.</span><span class="n">unwrap</span><span class="p">()</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="p">.</span><span class="n">unwrap</span><span class="p">()</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="p">.</span><span class="n">dyn_into</span>::<span class="o">&lt;</span><span class="n">web_sys</span>::<span class="n">CanvasRenderingContext2d</span><span class="o">&gt;</span><span class="p">()</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="p">.</span><span class="n">unwrap</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">context</span><span class="p">.</span><span class="n">begin_path</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// Draw the outer circle.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="w">    </span><span class="n">context</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="p">.</span><span class="n">arc</span><span class="p">(</span><span class="mf">75.0</span><span class="p">,</span><span class="w"> </span><span class="mf">75.0</span><span class="p">,</span><span class="w"> </span><span class="mf">50.0</span><span class="p">,</span><span class="w"> </span><span class="mf">0.0</span><span class="p">,</span><span class="w"> </span><span class="kt">f64</span>::<span class="n">consts</span>::<span class="no">PI</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="mf">2.0</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="p">.</span><span class="n">unwrap</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// Draw the mouth.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="w">    </span><span class="n">context</span><span class="p">.</span><span class="n">move_to</span><span class="p">(</span><span class="mf">110.0</span><span class="p">,</span><span class="w"> </span><span class="mf">75.0</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">context</span><span class="p">.</span><span class="n">arc</span><span class="p">(</span><span class="mf">75.0</span><span class="p">,</span><span class="w"> </span><span class="mf">75.0</span><span class="p">,</span><span class="w"> </span><span class="mf">35.0</span><span class="p">,</span><span class="w"> </span><span class="mf">0.0</span><span class="p">,</span><span class="w"> </span><span class="kt">f64</span>::<span class="n">consts</span>::<span class="no">PI</span><span class="p">).</span><span class="n">unwrap</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// Draw the left eye.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="w">    </span><span class="n">context</span><span class="p">.</span><span class="n">move_to</span><span class="p">(</span><span class="mf">65.0</span><span class="p">,</span><span class="w"> </span><span class="mf">65.0</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">context</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="p">.</span><span class="n">arc</span><span class="p">(</span><span class="mf">60.0</span><span class="p">,</span><span class="w"> </span><span class="mf">65.0</span><span class="p">,</span><span class="w"> </span><span class="mf">5.0</span><span class="p">,</span><span class="w"> </span><span class="mf">0.0</span><span class="p">,</span><span class="w"> </span><span class="kt">f64</span>::<span class="n">consts</span>::<span class="no">PI</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="mf">2.0</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="p">.</span><span class="n">unwrap</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// Draw the right eye.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="w">    </span><span class="n">context</span><span class="p">.</span><span class="n">move_to</span><span class="p">(</span><span class="mf">95.0</span><span class="p">,</span><span class="w"> </span><span class="mf">65.0</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">context</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="p">.</span><span class="n">arc</span><span class="p">(</span><span class="mf">90.0</span><span class="p">,</span><span class="w"> </span><span class="mf">65.0</span><span class="p">,</span><span class="w"> </span><span class="mf">5.0</span><span class="p">,</span><span class="w"> </span><span class="mf">0.0</span><span class="p">,</span><span class="w"> </span><span class="kt">f64</span>::<span class="n">consts</span>::<span class="no">PI</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="mf">2.0</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="p">.</span><span class="n">unwrap</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">context</span><span class="p">.</span><span class="n">stroke</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span></span></span></code></pre></td></tr></table>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div id="outline-container-headline-5" class="outline-2">
<h2 id="headline-5">
해결법
</h2>
<div id="outline-text-headline-5" class="outline-text-2">
<p>해당 프로젝트 내에서 <code>cargo check</code> 명령어를 실행하면 다음과 같은 에러가 발생한다.</p>]]></description></item><item><title>emacs에서 svg 수정 안되는 문제 해결하기</title><link>https://yeongcheon.github.io/posts/2021-02-01-emacs-image-mode-edit-bug/</link><pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate><author>yeongcheon</author><guid>https://yeongcheon.github.io/posts/2021-02-01-emacs-image-mode-edit-bug/</guid><description><![CDATA[<p>
이맥스에서 svg 파일을 열면 기본적으로 image-mode가 활성화 된 상태로 파일이 열립니다. 이 때 버퍼는 svg 코드가 아니라 렌더링 된 이미지를 보여줍니다. 이미지가 아니라 코드를 보고싶을 경우엔 <code>C-c C-c</code> 단축키를 이용해서 버퍼 상태를 전환해야 합니다. 대부분의 코드 보기 상태에서 별도의 조치 없이 바로 코드 작업을 할 수 있지만 간혹 코드 수정이 안되는 경우가 있습니다. 원인이야 다양할 수 있지만 저같은 경우엔 <a href="https://github.com/editorconfig/editorconfig-emacs">editorconfig-mode</a>가 문제였습니다. 아래는 제 <code>.emacs</code> 파일의 일부입니다. editorconfig-mode가 기본적으로 활성화 되도록 설정되어 있습니다.</p>]]></description></item><item><title>emacs에서 Typescript 개발환경 구축하기</title><link>https://yeongcheon.github.io/posts/2021-01-26-emacs-typescript-eslint-setting/</link><pubDate>Tue, 26 Jan 2021 23:00:00 +0900</pubDate><author>yeongcheon</author><guid>https://yeongcheon.github.io/posts/2021-01-26-emacs-typescript-eslint-setting/</guid><description><![CDATA[<p>
<a href="https://www.typescriptlang.org/">Typescript</a>는 마이크로소프트(이하 MS)의 주도로 개발이 되고 있기 때문인지 Vscode에서 아주 편안하게 개발이 가능합니다. 사실 이번 글에서 주로 사용할 <a href="https://emacs-lsp.github.io/lsp-mode/page/installation/">lsp-mode</a>도 MS에서 개발한 LSP에 기반하여 작성된 모드입니다. 이 외에도 <a href="https://emacs-lsp.github.io/lsp-mode/page/lsp-css/">css languag server</a> 등등 많은 부분을 MS에서 작성한 프로그램에 의존하고 있는데 이쯤되면 그냥 속편하게 Vscode를 쓰는게 낫지 않을까 싶지만 몇년동안 정들었던 이맥스를 포기하기엔 아쉬움이 많이 남기에 Typescript 개발환경 구축 방법을 기록하고자 합니다. 이 글은 다음과 같은 내용을 기준으로 작성되었습니다.</p>]]></description></item><item><title>hugo에서 수학 수식 표현하기</title><link>https://yeongcheon.github.io/posts/2020-05-22-org-latex/</link><pubDate>Fri, 22 May 2020 23:00:00 +0900</pubDate><author>yeongcheon</author><guid>https://yeongcheon.github.io/posts/2020-05-22-org-latex/</guid><description><![CDATA[<p>
이 글은 <a href="https://themes.gohugo.io/theme/hugo-coder/post/math-typesetting.html">여기</a><a href="https://emacs.stackexchange.com/questions/2650/how-should-i-write-inline-equations-in-org-mode-so-they-export-to-latex-properly">저기</a>를 참고해서 작성되었습니다.</p>
<div id="outline-container-headline-1" class="outline-2">
<h2 id="headline-1">
목표
</h2>
<div id="outline-text-headline-1" class="outline-text-2">
<p>이 문서에는 <a href="https://gohugo.io/">hugo</a> + <a href="https://orgmode.org/">org mode</a> + <a href="https://katex.org/">kaTex</a> 를 조합해서 글을 작성하는 법을 설명합니다. hugo와 org mode는 이미 사용 중이라고 가정하고 hugo에 kaTex를 설정하는 법을 중점적으로 설명합니다.</p>]]></description></item><item><title>이맥스에서 특정 명령어 단축키로 지정하기</title><link>https://yeongcheon.github.io/posts/2020-05-18-emacs-configure-shortcut/</link><pubDate>Mon, 18 May 2020 13:00:00 +0900</pubDate><author>yeongcheon</author><guid>https://yeongcheon.github.io/posts/2020-05-18-emacs-configure-shortcut/</guid><description><![CDATA[<p>
이맥스에서 단축키를 직접 설정하는 법을 알아봅시다. 아는 게 없어서 <a href="http://ergoemacs.org/emacs/keyboard_shortcuts.html">여기</a> <a href="http://emacslife.com/read-lisp-tweak-emacs/beginner-3-make-things-more-convenient.html">저기</a> 참고를 많이 했어요.</p>
<div id="outline-container-headline-1" class="outline-2">
<h2 id="headline-1">
기본 사용법
</h2>
<div id="outline-text-headline-1" class="outline-text-2">
<p>제일 단순한 예제를 먼저 살펴봅시다.</p>
<div class="src src-lisp">
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-lisp" data-lang="lisp"><span class="line"><span class="cl"><span class="p">(</span><span class="nv">global-set-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&#34;M-a&#34;</span><span class="p">)</span> <span class="ss">&#39;backward-char</span><span class="p">)</span> <span class="c1">; Alt+a</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">(</span><span class="nv">global-set-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&#34;C-a&#34;</span><span class="p">)</span> <span class="ss">&#39;backward-char</span><span class="p">)</span> <span class="c1">; Ctrl+a</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">(</span><span class="nv">global-set-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&#34;C-c t&#34;</span><span class="p">)</span> <span class="ss">&#39;backward-char</span><span class="p">)</span> <span class="c1">; Ctrl+c t</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">(</span><span class="nv">global-set-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&#34;&lt;f7&gt; &lt;f8&gt;&#34;</span><span class="p">)</span> <span class="ss">&#39;whitespace-mode</span><span class="p">)</span>    <span class="c1">; F7 F8</span></span></span></code></pre></td></tr></table>
</div>
</div>
</div>
<p>
  딱히 설명이 필요 없을 정도로 간단하지만 굳이 첨언을 하자면 모든 buffer에서 사용할 수 있는 단축키를 지정할때는 위와 같이 사용합니다. </p>]]></description></item><item><title>이맥스에서 여러 파일 찾아 바꾸기</title><link>https://yeongcheon.github.io/posts/2020-05-13-emacs-search-and-replace/</link><pubDate>Wed, 13 May 2020 23:00:00 +0900</pubDate><author>yeongcheon</author><guid>https://yeongcheon.github.io/posts/2020-05-13-emacs-search-and-replace/</guid><description><![CDATA[<p>
대부분의 편집기에서 기본적으로 <code>Ctrl + Shift + h</code> 단축키에 해당하는 <code>파일에서 찾기/바꾸기</code> 기능을 emacs에서 사용해보자.</p>
<div id="outline-container-headline-1" class="outline-2">
<h2 id="headline-1">
단축키 요약
</h2>
<div id="outline-text-headline-1" class="outline-text-2">
<p>구구절절 설명하기 전에 우선 단축키 요약본을 보자</p>]]></description></item><item><title>emacs에서 내가 사용중인 모든 패키지 업그레이드 하기</title><link>https://yeongcheon.github.io/posts/2020-03-08-emacs-all-package-upgrade/</link><pubDate>Sun, 08 Mar 2020 13:00:00 +0900</pubDate><author>yeongcheon</author><guid>https://yeongcheon.github.io/posts/2020-03-08-emacs-all-package-upgrade/</guid><description><![CDATA[<div id="outline-container-headline-1" class="outline-2">
<h2 id="headline-1">
업그레이드 방법
</h2>
<div id="outline-text-headline-1" class="outline-text-2">
<p>
  별거 없다. 글을 길게 쓸 생각(능력)은 없지만 이마저도 읽기 싫은 사람은 그냥 아래의 명령어만 쓰자.</p>
<div class="src src-lisp">
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-lisp" data-lang="lisp"><span class="line"><span class="cl"><span class="nv">M-x</span> <span class="nv">package-list-packages</span>
</span></span><span class="line"><span class="cl"><span class="nv">U</span>
</span></span><span class="line"><span class="cl"><span class="nv">x</span></span></span></code></pre></td></tr></table>
</div>
</div>
</div>
<div id="outline-container-headline-2" class="outline-3">
<h3 id="headline-2">
Step by Step
</h3>
<div id="outline-text-headline-2" class="outline-text-3">
<div id="outline-container-headline-3" class="outline-4">
<h4 id="headline-3">
패키지 목록 화면으로 들어가기
</h4>
<div id="outline-text-headline-3" class="outline-text-4">
<p><strong>M-x package-list-packages</strong> 를 입력하면 이맥스를 지원하는 다양한 종류의 패키지를 볼 수 있다.</p>]]></description></item><item><title>emacs에 $PATH 환경변수 인식 시키기</title><link>https://yeongcheon.github.io/posts/2020-01-08-emacs-path-setting/</link><pubDate>Wed, 08 Jan 2020 23:00:00 +0900</pubDate><author>yeongcheon</author><guid>https://yeongcheon.github.io/posts/2020-01-08-emacs-path-setting/</guid><description><![CDATA[<div id="outline-container-headline-1" class="outline-2">
<h2 id="headline-1">
Intro
</h2>
<div id="outline-text-headline-1" class="outline-text-2">
<p>나는 우분투에서 이맥스를 즐겨쓰고 있다. 이맥스에서 <a href="https://golang.org">고 언어</a>를 종종 쓰는데 이번에 노트북을 셋팅하면서 문제가 발생했다.
  일단 나는 이맥스에서 개발할 때 주로 <a href="https://github.com/emacs-lsp/lsp-mode">lsp-mode</a>를 바탕으로 개발환경을 구성하는데, 기본적인 설정은 <a href="https://github.com/emacs-lsp/lsp-mode#installation">문서</a>를 보고 구성하면 무리없이 따라할 수 있다. 이번 글에서는 가이드대로 다 따라했는데 이맥스에서 <a href="https://github.com/golang/tools/blob/master/gopls/README.md">gopls</a>를 인식하지 못하던 문제에 대한 해결법을 기록하고자 한다.</p>]]></description></item><item><title>이맥스에서 lsp-mode를 이용해 자바 개발환경 셋팅하기</title><link>https://yeongcheon.github.io/posts/2019-06-31-emcs-lsp-java-setup/</link><pubDate>Sun, 30 Jun 2019 21:00:00 +0900</pubDate><author>yeongcheon</author><guid>https://yeongcheon.github.io/posts/2019-06-31-emcs-lsp-java-setup/</guid><description><![CDATA[<p>
이맥스에서 자바 개발환경을 셋팅해보자. 우선 기본적으로 이맥스와 자바, gradle 등등은 설치가 되어있다고 가정한다. 포스트 작성 기준은 아래와 같다.</p>
<ul>
<li>OS: <code class="verbatim">ubuntu 18.04 LTS</code></li>
<li>emacs: <code class="verbatim">GNU Emacs 25.2.2</code></li>
<li>java: <code class="verbatim">openjdk version &#34;1.8.0_212&#34;</code></li>
<li>gradle: <code class="verbatim">Gradle 4.10.2</code></li>
</ul>
<p>이 포스트에선 개발환경 셋팅을 위해서 <a href="https://github.com/emacs-lsp/lsp-mode">lsp-mode</a>를 이용할 예정이다. 본격적으로 셋팅하기에 앞어서 lsp가 무엇인지 간단하게 한번 알아보자</p>]]></description></item><item><title>이맥스 폰트, 세벌식 셋팅하기</title><link>https://yeongcheon.github.io/posts/2019-06-19-emacs-hangul/</link><pubDate>Wed, 19 Jun 2019 00:00:00 +0900</pubDate><author>yeongcheon</author><guid>https://yeongcheon.github.io/posts/2019-06-19-emacs-hangul/</guid><description><![CDATA[<p>
아래의 내용을 <code class="verbatim">.emacs</code> 파일 안에 복붙해주자. 세벌식 버전은 최종이 아닌 390버전이다.</p>
<div class="src src-lisp">
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-lisp" data-lang="lisp"><span class="line"><span class="cl"><span class="p">(</span><span class="nv">set-fontset-font</span> <span class="no">t</span> <span class="ss">&#39;hangul</span> <span class="p">(</span><span class="nv">font-spec</span> <span class="ss">:family</span> <span class="s">&#34;D2Coding&#34;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">(</span><span class="nv">set-language-environment</span> <span class="s">&#34;Korean&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">(</span><span class="nv">prefer-coding-system</span> <span class="ss">&#39;utf-8</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">(</span><span class="k">setq</span> <span class="nv">default-input-method</span> <span class="s">&#34;korean-hangul390&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">(</span><span class="k">setq</span> <span class="nv">default-korean-keyboard</span> <span class="s">&#34;390&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">(</span><span class="nv">global-set-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">&#34;&lt;S-kana&gt;&#34;</span><span class="p">)</span> <span class="ss">&#39;toggle-input-method</span><span class="p">)</span></span></span></code></pre></td></tr></table>
</div>
</div>
</div>]]></description></item></channel></rss>