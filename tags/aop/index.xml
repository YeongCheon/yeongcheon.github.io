<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>aop on 김영천 블로그</title><link>https://yeongcheon.github.io/tags/aop/</link><description>Recent content in aop on 김영천 블로그</description><generator>Hugo -- gohugo.io</generator><language>ko</language><copyright>&amp;copy; Copyright 2020 YeongCheon</copyright><lastBuildDate>Sun, 26 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://yeongcheon.github.io/tags/aop/index.xml" rel="self" type="application/rss+xml"/><item><title>Spring Pointcut 표현식에 부모 클래스 표현하기</title><link>https://yeongcheon.github.io/posts/2021-12-26-spring-aop-superclass/</link><pubDate>Sun, 26 Dec 2021 00:00:00 +0000</pubDate><guid>https://yeongcheon.github.io/posts/2021-12-26-spring-aop-superclass/</guid><description>들어가며 이 문서는 기본적으로 Spring AOP에 대해 사전 지식이 있다는 전제 하에 작성되었습니다.
요구사항 Fruit 클래스를 상속받는 Apple, Banana 클래스가 있습니다. Apple 또는 Banana 클래스를 반환하는 모든 메서드 마지막에 로그를 남기는 기능을 작성하고자 합니다.
Basic Code Model 1 2 3 4 5 6 7 8 9 10 11 12 13 package dev.yeongcheon.example.aop.model abstract class Fruit( val name: String ) class Apple: Fruit( name = &amp;#34;apple&amp;#34; ) class Banana: Fruit( name = &amp;#34;banana&amp;#34; ) Controller 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 package dev.</description></item></channel></rss>