<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Spring - 태그 - 김영천 블로그</title><link>https://yeongcheon.github.io/tags/spring/</link><description>Spring - 태그 - 김영천 블로그</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Sun, 26 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://yeongcheon.github.io/tags/spring/" rel="self" type="application/rss+xml"/><item><title>Spring Pointcut 표현식에 부모 클래스 표현하기</title><link>https://yeongcheon.github.io/posts/2021-12-26-spring-aop-superclass/</link><pubDate>Sun, 26 Dec 2021 00:00:00 +0000</pubDate><author>yeongcheon</author><guid>https://yeongcheon.github.io/posts/2021-12-26-spring-aop-superclass/</guid><description><![CDATA[<div id="outline-container-headline-1" class="outline-2">
<h2 id="headline-1">
들어가며
</h2>
<div id="outline-text-headline-1" class="outline-text-2">
<p>이 문서는 기본적으로 Spring AOP에 대해 사전 지식이 있다는 전제 하에 작성되었습니다.</p>
</div>
</div>
<div id="outline-container-headline-2" class="outline-2">
<h2 id="headline-2">
요구사항
</h2>
<div id="outline-text-headline-2" class="outline-text-2">
<p><code class="verbatim">Fruit</code> 클래스를 상속받는 <code class="verbatim">Apple</code>, <code class="verbatim">Banana</code> 클래스가 있습니다. <code class="verbatim">Apple</code> 또는 <code class="verbatim">Banana</code> 클래스를 반환하는 모든 메서드 마지막에 로그를 남기는 기능을 작성하고자 합니다.</p>]]></description></item><item><title>코틀린으로 작성된 스프링 기반 API 트랜잭션 rollback 관리</title><link>https://yeongcheon.github.io/posts/2020-09-06-kotlin-spring-exception-rollback/</link><pubDate>Tue, 08 Sep 2020 23:00:00 +0900</pubDate><author>yeongcheon</author><guid>https://yeongcheon.github.io/posts/2020-09-06-kotlin-spring-exception-rollback/</guid><description>&lt;p>
Kotlin + Spring boot을 조합해 작성한 REST API에서 &lt;a href="https://kotlinlang.org/docs/reference/exceptions.html#checked-exceptions">CheckedException&lt;/a>이 발생해도 Rollback이 되지 않는 문제와 그 해결법에 대해 알아봅시다. 이 글은 Spring, RDB, JPA에 대한 기본적인 이해가 있다는 가정 하에 작성되었습니다.&lt;/p></description></item><item><title>appengine + springboot + kotlin + jpa + cloudsql 연동하기</title><link>https://yeongcheon.github.io/posts/2018-11-11-springboot-jpa-cloudsql-connect/</link><pubDate>Sun, 11 Nov 2018 19:00:00 +0900</pubDate><author>xxxx</author><guid>https://yeongcheon.github.io/posts/2018-11-11-springboot-jpa-cloudsql-connect/</guid><description><![CDATA[<p>회사에서 새로 시작하는 API 서버 개발에 아래와 같은 환경을 적용하기로 했다.</p>
<ul>
<li>구동환경 : <a href="https://cloud.google.com/appengine/docs/standard/java/" target="_blank" rel="noopener noreffer ">Google App Engine Standard Environment</a></li>
<li>언어 : <a href="https://kotlinlang.org/" target="_blank" rel="noopener noreffer ">kotlin 1.3</a></li>
<li>framework : <a href="https://spring.io/projects/spring-boot" target="_blank" rel="noopener noreffer ">Spring Boot 2.0.2.RELEASE</a></li>
<li>DB : <a href="https://cloud.google.com/sql/docs/mysql/" target="_blank" rel="noopener noreffer ">cloud sql(MySQL 5.7)</a></li>
<li>ORM : <a href="https://opentutorials.org/module/1281" target="_blank" rel="noopener noreffer ">hibernate/JPA</a></li>
<li>IDE: <a href="https://www.jetbrains.com/idea/" target="_blank" rel="noopener noreffer ">IntelliJ Ultimate</a></li>
</ul>
<p>각각 놓고보면 다들 유명하고 널리 쓰이는 기술들이지만 얘들을 한꺼번에 적용한 가이드라인이 없어서 내가 직접 가이드를 작성해볼까 한다. A to Z 형식의 가이드는 아니고 셋팅 중 삽질을 크게 했던 부분 위주로 작성해보도록 하겠다.</p>]]></description></item></channel></rss>