<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Grpc - 태그 - 김영천 블로그</title><link>https://yeongcheon.github.io/tags/grpc/</link><description>Grpc - 태그 - 김영천 블로그</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Sat, 16 Sep 2023 01:00:00 +0900</lastBuildDate><atom:link href="https://yeongcheon.github.io/tags/grpc/" rel="self" type="application/rss+xml"/><item><title>Descriptor of Protobuf</title><link>https://yeongcheon.github.io/posts/2023-09-16-protobuf-descriptor/</link><pubDate>Sat, 16 Sep 2023 01:00:00 +0900</pubDate><author>yeongcheon</author><guid>https://yeongcheon.github.io/posts/2023-09-16-protobuf-descriptor/</guid><description><![CDATA[<div id="outline-container-headline-1" class="outline-2">
<h2 id="headline-1">
Descriptor의 정의와 목적
</h2>
<div id="outline-text-headline-1" class="outline-text-2">
<p>protobuf에는 Descriptor라는 개념이 있습니다. 각 출처별로 Descriptor의 정의에 대해 알아보고자 합니다.</p>]]></description></item><item><title>gRPC를 웹브라우저에 호출해보자(a.k.a Typescript)</title><link>https://yeongcheon.github.io/posts/2020-06-12-grpc-for-web/</link><pubDate>Fri, 12 Jun 2020 22:00:00 +0900</pubDate><author>yeongcheon</author><guid>https://yeongcheon.github.io/posts/2020-06-12-grpc-for-web/</guid><description><![CDATA[<div id="outline-container-headline-1" class="outline-2">
<h2 id="headline-1">
목표
</h2>
<div id="outline-text-headline-1" class="outline-text-2">
<p>브라우저에서 rpc를 호출하고 싶습니다. 하지만 2020년 7월 기준으로 브라우저에서 gRPC의 rpc를 직접 호출하는 건 불가능합니다. 그치만 <a href="https://www.envoyproxy.io/">envoy Proxy</a>와 함께라면 가능합니다. <strong>이 문서에서는 grpc-web을 이용해 생성된 Typescript 파일을 이용해 <a href="https://grpc.io/docs/what-is-grpc/core-concepts/#server-streaming-rpc">server streaming rpc</a>를 호출하는 방법을 설명합니다.</strong> 서버는 <a href="https://go.dev/">Go</a>, 클라이언트는 <a href="https://www.typescriptlang.org/">Typescript</a> 언어를 사용합니다.</p>]]></description></item><item><title>gRPC interceptor</title><link>https://yeongcheon.github.io/posts/2020-05-30-grpc-interceptor/</link><pubDate>Sat, 30 May 2020 12:00:00 +0900</pubDate><author>yeongcheon</author><guid>https://yeongcheon.github.io/posts/2020-05-30-grpc-interceptor/</guid><description><![CDATA[<p>
이 문서는 <a href="https://github.com/grpc/grpc-go/blob/master/examples/features/interceptor/README.md">grpc-go Interceptor 문서</a>를 번역한 것입니다(<del>대부분 번역기 발췌, 작성자는 영어를 되게 못해요</del>).</p>
<div id="outline-container-headline-1" class="outline-2">
<h2 id="headline-1">
Interceptor
</h2>
<div id="outline-text-headline-1" class="outline-text-2">
<p>gRPC는 clientConn/server 단위로 인터셉터를 구현하고 설치할 수 있는 간단한 API를 제공합니다. 인터셉터는 각 RPC 호출을 중간에서 가로채는 역할을 합니다. 사용자는 인터셉터를 사용하여 로깅, 인증/권한부여, 메트릭 수집 등 RPC 전체를 아우르는 공용 기능을 수행할 수 있습니다.</p>]]></description></item><item><title>grpc-gateway를 이용한 JSON 통신</title><link>https://yeongcheon.github.io/posts/2020-04-15-grpc-build-with-googleapis/</link><pubDate>Wed, 15 Apr 2020 19:00:00 +0900</pubDate><author>yeongcheon</author><guid>https://yeongcheon.github.io/posts/2020-04-15-grpc-build-with-googleapis/</guid><description><![CDATA[<div id="outline-container-headline-1" class="outline-2">
<h2 id="headline-1">
목표
</h2>
<div id="outline-text-headline-1" class="outline-text-2">
<p><a href="https://blog.banksalad.com/tech/production-ready-grpc-in-golang/#grpc-gateway%25EB%25A5%25BC-%25EC%259D%25B4%25EC%259A%25A9%25ED%2595%259C-json-%25ED%2586%25B5%25EC%258B%25A0">grpc-gateway를 이용한 통신</a>을 하기 위해 작성한 <code>.proto</code> 파일을 컴파일 하는 방법을 알아보겠습니다.</p>
</div>
</div>
<div id="outline-container-headline-2" class="outline-2">
<h2 id="headline-2">
source code
</h2>
<div id="outline-text-headline-2" class="outline-text-2">
<p>우선 컴파일 하고자 하는 소스코드를 살펴봅시다. 이 코드는 <a href="https://github.com/grpc-ecosystem/grpc-gateway#usage">grpc-gateway</a>에 있는 예제와 동일합니다.</p>]]></description></item></channel></rss>