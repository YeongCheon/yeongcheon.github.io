<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tinode on 김영천 블로그</title><link>https://yeongcheon.github.io/tags/tinode/</link><description>Recent content in tinode on 김영천 블로그</description><generator>Hugo -- gohugo.io</generator><language>ko</language><copyright>&amp;copy; Copyright 2020 YeongCheon</copyright><lastBuildDate>Sun, 26 Jul 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://yeongcheon.github.io/tags/tinode/index.xml" rel="self" type="application/rss+xml"/><item><title>tinode series.003 - API document</title><link>https://yeongcheon.github.io/posts/2020-07-26-tinode-chat-api-doc-translate-ko/</link><pubDate>Sun, 26 Jul 2020 00:00:00 +0000</pubDate><guid>https://yeongcheon.github.io/posts/2020-07-26-tinode-chat-api-doc-translate-ko/</guid><description>매번 영어문서 보기 빡쳐서 직접 번역기 돌려가며 쓰는 번역본. 번역기와 의역, 오역 범벅입니다. 가급적이면 공식 문서를 보세요.
Server API How it works? Tinode는 IM 라우터이자 스토어입니다. 발행-구독 모델 컨셉을 대략적으로 따릅니다.
서버는 세션, 사용자, 그리고 토픽을 연결합니다. 세션은 클라이언트 프로그램과 서버 간의 네트워크 연결을 의미합니다. 사용자는 세션을 서버에 연결하는 사람을 의미합니다. 토픽은 세션들끼리 콘텐츠를 주고받는 통신 채널입니다.
사용자가 토픽은 각각 고유한 ID가 할당됩니다. 사용자 ID는 &amp;#39;usr&amp;#39; 문자로 시작하는 base64-URL 인코딩 6비트 랜덤 문자로 이루어져 있습니다(예: usr2il9suCbuko).</description></item><item><title>tinode series.002 - Install &amp; Run</title><link>https://yeongcheon.github.io/posts/2019-05-28-tinode002/</link><pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate><guid>https://yeongcheon.github.io/posts/2019-05-28-tinode002/</guid><description>서론 소스코드를 살펴보기에 앞서서 일단 프로그램 실행을 시켜보자. 이 글에서 설명하는 예제는 커밋 아이디 기준 2558db90a50c80c974c2fccfec6b87ea44e4758b을 바탕으로 설명한다. 사실 이 글을 안봐도 여기를 따라하면 보통을 무난하게 설치 및 실행을 할 수 있다. 이 가이드는 공식 가이드 중 Building from Source, Mysql을 기준으로 설명한다.
실행환경 및 선행조건 Ubuntu 18.04 LTS
Golang이 설치되어 있어야 한다(기준 버전 : 1.12.5).
Mysql이 설치되어 있어야 한다(기준 버전: 5.</description></item><item><title>tinode series.001 - Intro</title><link>https://yeongcheon.github.io/posts/2019-03-07-tinode001/</link><pubDate>Thu, 07 Mar 2019 19:00:00 +0000</pubDate><guid>https://yeongcheon.github.io/posts/2019-03-07-tinode001/</guid><description>인스턴스 메시징? 요즘에는 어느 서비스를 이용하든 대부분 실시간 채팅은 기본으로 지원한다. 페이스북, 트위터같은 서비스는 물론이고 트위치, 유튜브 같은 동영상 기반 플랫폼도 실시간 채팅을 기본적으로 지원한다. 사실 과거에 2G폰에서 문자메세지를 주고받던 시절부터 현재 카카오톡, 텔레그램같은 실시간 인스턴트 메세징 앱에 이르기까지 플랫폼의 변화만 있을 뿐 글자를 이용한 실시간 의사소통은 현대인에게 상당히 익숙한 의사소통 방법이다.
우리 서비스에 적용하고 싶어(어떻게?) 운영중인 서비스에 인스턴스 메시징 기능을 적용하면 여러가지 이점이 많다. 빠른 의사소통은 물론 사용자의 서비스 체류시간 및 접속빈도 증가 등등.</description></item></channel></rss>