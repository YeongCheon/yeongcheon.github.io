<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Typescript - 태그 - 김영천 블로그</title><link>https://yeongcheon.github.io/tags/typescript/</link><description>Typescript - 태그 - 김영천 블로그</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Tue, 27 Feb 2024 09:00:00 +0900</lastBuildDate><atom:link href="https://yeongcheon.github.io/tags/typescript/" rel="self" type="application/rss+xml"/><item><title>타입스크립트 import 절대경로로 설정하기</title><link>https://yeongcheon.github.io/posts/2024-02-27-tsconfig-baseurl/</link><pubDate>Tue, 27 Feb 2024 09:00:00 +0900</pubDate><author>YeongCheon Kim</author><guid>https://yeongcheon.github.io/posts/2024-02-27-tsconfig-baseurl/</guid><description><![CDATA[<p>
타입스크립트 개발을 하다 보면 <code>import</code> 구문이 절대경로가 아니라 상대 경로로 포함되는 경우가 있습니다.</p>
<div class="src src-typescript">
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-typescript" data-lang="typescript"><span class="line"><span class="cl"><span class="kr">import</span> <span class="p">{</span> <span class="nx">MY_MODULE</span> <span class="p">}</span> <span class="kr">from</span> <span class="s1">&#39;../../../../my_module&#39;</span><span class="p">;</span> <span class="c1">// incorrect
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="kr">import</span> <span class="p">{</span> <span class="nx">MY_MODULE</span> <span class="p">}</span> <span class="kr">from</span> <span class="s1">&#39;src/modules/my_module&#39;</span><span class="p">;</span> <span class="c1">// correct
</span></span></span></code></pre></td></tr></table>
</div>
</div>
</div>
<p>
<code>import</code> 구문을 절대 경로로 포함하길 원한다면 <code>tsconfig.json</code> 파일의 <code>compilerOptions</code> 속성 내부에 <code>baseUrl</code> 속성을 지정하면 됩니다.</p>]]></description></item><item><title>emacs에서 Typescript 개발환경 구축하기</title><link>https://yeongcheon.github.io/posts/2021-01-26-emacs-typescript-eslint-setting/</link><pubDate>Tue, 26 Jan 2021 23:00:00 +0900</pubDate><author>yeongcheon</author><guid>https://yeongcheon.github.io/posts/2021-01-26-emacs-typescript-eslint-setting/</guid><description><![CDATA[<p>
<a href="https://www.typescriptlang.org/">Typescript</a>는 마이크로소프트(이하 MS)의 주도로 개발이 되고 있기 때문인지 Vscode에서 아주 편안하게 개발이 가능합니다. 사실 이번 글에서 주로 사용할 <a href="https://emacs-lsp.github.io/lsp-mode/page/installation/">lsp-mode</a>도 MS에서 개발한 LSP에 기반하여 작성된 모드입니다. 이 외에도 <a href="https://emacs-lsp.github.io/lsp-mode/page/lsp-css/">css languag server</a> 등등 많은 부분을 MS에서 작성한 프로그램에 의존하고 있는데 이쯤되면 그냥 속편하게 Vscode를 쓰는게 낫지 않을까 싶지만 몇년동안 정들었던 이맥스를 포기하기엔 아쉬움이 많이 남기에 Typescript 개발환경 구축 방법을 기록하고자 합니다. 이 글은 다음과 같은 내용을 기준으로 작성되었습니다.</p>]]></description></item><item><title>gRPC를 웹브라우저에 호출해보자(a.k.a Typescript)</title><link>https://yeongcheon.github.io/posts/2020-06-12-grpc-for-web/</link><pubDate>Fri, 12 Jun 2020 22:00:00 +0900</pubDate><author>yeongcheon</author><guid>https://yeongcheon.github.io/posts/2020-06-12-grpc-for-web/</guid><description><![CDATA[<div id="outline-container-headline-1" class="outline-2">
<h2 id="headline-1">
목표
</h2>
<div id="outline-text-headline-1" class="outline-text-2">
<p>브라우저에서 rpc를 호출하고 싶습니다. 하지만 2020년 7월 기준으로 브라우저에서 gRPC의 rpc를 직접 호출하는 건 불가능합니다. 그치만 <a href="https://www.envoyproxy.io/">envoy Proxy</a>와 함께라면 가능합니다. <strong>이 문서에서는 grpc-web을 이용해 생성된 Typescript 파일을 이용해 <a href="https://grpc.io/docs/what-is-grpc/core-concepts/#server-streaming-rpc">server streaming rpc</a>를 호출하는 방법을 설명합니다.</strong> 서버는 <a href="https://go.dev/">Go</a>, 클라이언트는 <a href="https://www.typescriptlang.org/">Typescript</a> 언어를 사용합니다.</p>]]></description></item><item><title>emacs에서 tslint 이용하기</title><link>https://yeongcheon.github.io/posts/2018-09-21-tslint-in-emacs/</link><pubDate>Fri, 21 Sep 2018 12:00:00 +0900</pubDate><author>xxxx</author><guid>https://yeongcheon.github.io/posts/2018-09-21-tslint-in-emacs/</guid><description><![CDATA[<p>나는 angular6를 이용해 웹 프로젝트를 진행하는걸 선호하는데 툴은 emacs를 주로 쓰고있다(OS는 ubuntu). vscode를 쓸까 했는데 그냥 이맥스가 좋아서(이유는 없다) 이맥스에 꾸역꾸역 개발환경을 구축했다. <a href="https://github.com/ananthakumaran/tide" target="_blank" rel="noopener noreffer ">tide</a>를 이용해서 환경을 구성했는데 <a href="https://github.com/ananthakumaran/tide" target="_blank" rel="noopener noreffer ">tslint</a>가 작동하지 않아서 잠깐 했던 삽질을 여기에 짤막하게 기록한다.</p>]]></description></item></channel></rss>