<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>static on 김영천 블로그</title><link>https://yeongcheon.github.io/tags/static/</link><description>Recent content in static on 김영천 블로그</description><generator>Hugo -- gohugo.io</generator><language>ko</language><copyright>&amp;copy; Copyright 2020 YeongCheon</copyright><lastBuildDate>Sun, 11 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://yeongcheon.github.io/tags/static/index.xml" rel="self" type="application/rss+xml"/><item><title>angular universal 메모리 누수 개선하기 - 001</title><link>https://yeongcheon.github.io/posts/2021-07-11-angular-memory-leak001/</link><pubDate>Sun, 11 Jul 2021 00:00:00 +0000</pubDate><guid>https://yeongcheon.github.io/posts/2021-07-11-angular-memory-leak001/</guid><description>앵귤러 기반 웹사이트를 개발하면서 발생한 메모리 누수의 다양한 원인들과 그 해결법을 기록합니다.
들어가며 부끄럽지만 앵귤러 기반 웹 프로젝트를 진행하며 메모리 누수같은 문제는 사실 전혀 신경을 안(못)쓰고 있었습니다. 어차피 사용자 브라우저에서 돌아가니깐 새로고침만 하면 해당 페이지의 메모리는 초기화될테니 속도만 느리지 않다면 된다는 생각이었지요. 당연히 이는 크게 잘못된 생각이었고 서버사이드 렌더링(이하 SSR)를 적용하면서 문제는 상당히 심각하게 흘러갑니다. 지금부터 제가 개발하면서 만나본 다양한 메모리 누수(memory leak) 문제를 살펴보고 그 해결법을 기록하고자 합니다.</description></item></channel></rss>