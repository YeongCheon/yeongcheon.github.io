<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Static - 태그 - 김영천 블로그</title><link>https://yeongcheon.github.io/tags/static/</link><description>Static - 태그 - 김영천 블로그</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Sun, 11 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://yeongcheon.github.io/tags/static/" rel="self" type="application/rss+xml"/><item><title>angular universal 메모리 누수 개선하기 - 001</title><link>https://yeongcheon.github.io/posts/2021-07-11-angular-memory-leak001/</link><pubDate>Sun, 11 Jul 2021 00:00:00 +0000</pubDate><author>yeongcheon</author><guid>https://yeongcheon.github.io/posts/2021-07-11-angular-memory-leak001/</guid><description><![CDATA[<p>
앵귤러 기반 웹사이트를 개발하면서 발생한 메모리 누수의 다양한 원인들과 그 해결법을 기록합니다.</p>
<div id="outline-container-headline-1" class="outline-2">
<h2 id="headline-1">
들어가며
</h2>
<div id="outline-text-headline-1" class="outline-text-2">
<p>
  부끄럽지만 앵귤러 기반 웹 프로젝트를 진행하며 메모리 누수같은 문제는 사실 전혀 신경을 안(<del>못</del>)쓰고 있었습니다. 어차피 사용자 브라우저에서 돌아가니깐 새로고침만 하면 해당 페이지의 메모리는 초기화될테니 속도만 느리지 않다면 된다는 생각이었지요. 당연히 이는 크게 잘못된 생각이었고 <strong>서버사이드 렌더링(이하 SSR)를 적용하면서 문제는 상당히 심각하게 흘러갑니다.</strong> 지금부터 제가 개발하면서 만나본 다양한 메모리 누수(memory leak) 문제를 살펴보고 그 해결법을 기록하고자 합니다.</p>]]></description></item></channel></rss>