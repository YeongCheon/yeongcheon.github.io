<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>observable on 김영천 블로그</title><link>https://yeongcheon.github.io/tags/observable/</link><description>Recent content in observable on 김영천 블로그</description><generator>Hugo -- gohugo.io</generator><language>ko</language><copyright>&amp;copy; Copyright 2020 YeongCheon</copyright><lastBuildDate>Thu, 15 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://yeongcheon.github.io/tags/observable/index.xml" rel="self" type="application/rss+xml"/><item><title>angular universal 메모리 누수 개선하기 - 002</title><link>https://yeongcheon.github.io/posts/2021-07-15-angular-memory-leak002/</link><pubDate>Thu, 15 Jul 2021 00:00:00 +0000</pubDate><guid>https://yeongcheon.github.io/posts/2021-07-15-angular-memory-leak002/</guid><description>앵귤러 기반 웹사이트를 개발하면서 발생한 메모리 누수의 다양한 원인들과 그 해결법을 기록합니다.
들어가며 이번 문서에서는 rxjs 쓰다보면 흔하게 접할 수 있는 메모리 누수에 대해 알아보고 eslint와 until-destroy를 이용해 메모리 누수를 원천적으로 막을 수 있는 방법에 대해 알아봅시다. 이 문서는 rxjs, eslint에 대해 기본적인 이해가 있다는 것을 전제로 작성되었습니다.
Bad Case 다음은 흔하게 작성하는 앵귤러 컴포넌트 코드입니다.
1 2 3 4 5 6 7 8 9 10 11 12 @Component({ selector: &amp;#39;app-a&amp;#39;, templateUrl: &amp;#39;.</description></item></channel></rss>