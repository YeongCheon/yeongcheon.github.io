<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Eslint - 태그 - 김영천 블로그</title><link>https://yeongcheon.github.io/tags/eslint/</link><description>Eslint - 태그 - 김영천 블로그</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Tue, 26 Jan 2021 23:00:00 +0900</lastBuildDate><atom:link href="https://yeongcheon.github.io/tags/eslint/" rel="self" type="application/rss+xml"/><item><title>emacs에서 Typescript 개발환경 구축하기</title><link>https://yeongcheon.github.io/posts/2021-01-26-emacs-typescript-eslint-setting/</link><pubDate>Tue, 26 Jan 2021 23:00:00 +0900</pubDate><author>yeongcheon</author><guid>https://yeongcheon.github.io/posts/2021-01-26-emacs-typescript-eslint-setting/</guid><description><![CDATA[<p>
<a href="https://www.typescriptlang.org/">Typescript</a>는 마이크로소프트(이하 MS)의 주도로 개발이 되고 있기 때문인지 Vscode에서 아주 편안하게 개발이 가능합니다. 사실 이번 글에서 주로 사용할 <a href="https://emacs-lsp.github.io/lsp-mode/page/installation/">lsp-mode</a>도 MS에서 개발한 LSP에 기반하여 작성된 모드입니다. 이 외에도 <a href="https://emacs-lsp.github.io/lsp-mode/page/lsp-css/">css languag server</a> 등등 많은 부분을 MS에서 작성한 프로그램에 의존하고 있는데 이쯤되면 그냥 속편하게 Vscode를 쓰는게 낫지 않을까 싶지만 몇년동안 정들었던 이맥스를 포기하기엔 아쉬움이 많이 남기에 Typescript 개발환경 구축 방법을 기록하고자 합니다. 이 글은 다음과 같은 내용을 기준으로 작성되었습니다.</p>]]></description></item></channel></rss>