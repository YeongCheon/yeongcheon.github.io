<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>JPA - 태그 - 김영천 블로그</title><link>https://yeongcheon.github.io/tags/jpa/</link><description>JPA - 태그 - 김영천 블로그</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Mon, 25 Nov 2019 00:00:00 +0900</lastBuildDate><atom:link href="https://yeongcheon.github.io/tags/jpa/" rel="self" type="application/rss+xml"/><item><title>JPA OneToMany 필드의 StackOverflowError</title><link>https://yeongcheon.github.io/posts/2019-11-14-jpa-one-to-many-collection-set/</link><pubDate>Mon, 25 Nov 2019 00:00:00 +0900</pubDate><author>yeongcheon</author><guid>https://yeongcheon.github.io/posts/2019-11-14-jpa-one-to-many-collection-set/</guid><description><![CDATA[<p>
JPA를 사용하다 보면 StackOverflow 에러를 종종 만날 수 있다. 이 글에서는 필드 타입이 <a href="https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-set/index.html">Set</a>인 Collection 타입에 아이템을 추가할 경우 StackVoerflow 에러가 발생하는 원인과 그 해결법에 대해 알아보자.</p>
<p>
`hashcode`, `equals` 메서드와 관계된 이야기이다.</p>]]></description></item><item><title>jackson을 이용해 json 변환 시 JPA entity의 id값만 추출하기</title><link>https://yeongcheon.github.io/posts/2019-03-01-jpa-jackson/</link><pubDate>Fri, 01 Mar 2019 19:00:00 +0900</pubDate><author>yeongcheon</author><guid>https://yeongcheon.github.io/posts/2019-03-01-jpa-jackson/</guid><description><![CDATA[<div id="outline-container-headline-1" class="outline-2">
<h2 id="headline-1">
들어가며
</h2>
<div id="outline-text-headline-1" class="outline-text-2">
<p>REST API 서버를 java언어에서 사용되는 대표적인 json(또는 xml, yaml, etc…) 라이브러리인 <a href="https://github.com/FasterXML/jackson">jackson</a> 은 kotlin에서도 사용이 가능하다. 
  JPA를 사용하다보면 entity를 json형식으로 반환할 때 해당 entity가 다른 entity를 필드로 참조하고 있을 경우 참조하는 entity의 id값만을 반환하고 싶을 경우가 있다.
  이 문제를 jackson을 이용해  json형식으로 이쁘게 변환하는 법을 알아보자.</p>]]></description></item><item><title>appengine + springboot + kotlin + jpa + cloudsql 연동하기</title><link>https://yeongcheon.github.io/posts/2018-11-11-springboot-jpa-cloudsql-connect/</link><pubDate>Sun, 11 Nov 2018 19:00:00 +0900</pubDate><author>xxxx</author><guid>https://yeongcheon.github.io/posts/2018-11-11-springboot-jpa-cloudsql-connect/</guid><description><![CDATA[<p>회사에서 새로 시작하는 API 서버 개발에 아래와 같은 환경을 적용하기로 했다.</p>
<ul>
<li>구동환경 : <a href="https://cloud.google.com/appengine/docs/standard/java/" target="_blank" rel="noopener noreffer ">Google App Engine Standard Environment</a></li>
<li>언어 : <a href="https://kotlinlang.org/" target="_blank" rel="noopener noreffer ">kotlin 1.3</a></li>
<li>framework : <a href="https://spring.io/projects/spring-boot" target="_blank" rel="noopener noreffer ">Spring Boot 2.0.2.RELEASE</a></li>
<li>DB : <a href="https://cloud.google.com/sql/docs/mysql/" target="_blank" rel="noopener noreffer ">cloud sql(MySQL 5.7)</a></li>
<li>ORM : <a href="https://opentutorials.org/module/1281" target="_blank" rel="noopener noreffer ">hibernate/JPA</a></li>
<li>IDE: <a href="https://www.jetbrains.com/idea/" target="_blank" rel="noopener noreffer ">IntelliJ Ultimate</a></li>
</ul>
<p>각각 놓고보면 다들 유명하고 널리 쓰이는 기술들이지만 얘들을 한꺼번에 적용한 가이드라인이 없어서 내가 직접 가이드를 작성해볼까 한다. A to Z 형식의 가이드는 아니고 셋팅 중 삽질을 크게 했던 부분 위주로 작성해보도록 하겠다.</p>]]></description></item></channel></rss>