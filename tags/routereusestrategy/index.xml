<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>RouteReuseStrategy - 태그 - 김영천 블로그</title><link>https://yeongcheon.github.io/tags/routereusestrategy/</link><description>RouteReuseStrategy - 태그 - 김영천 블로그</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Sun, 03 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://yeongcheon.github.io/tags/routereusestrategy/" rel="self" type="application/rss+xml"/><item><title>angular route reuse strategy</title><link>https://yeongcheon.github.io/posts/2021-10-03-angular-reuse-strategy/</link><pubDate>Sun, 03 Oct 2021 00:00:00 +0000</pubDate><author>yeongcheon</author><guid>https://yeongcheon.github.io/posts/2021-10-03-angular-reuse-strategy/</guid><description><![CDATA[<div id="outline-container-headline-1" class="outline-2">
<h2 id="headline-1">
Intro
</h2>
<div id="outline-text-headline-1" class="outline-text-2">
<p>웹앱을 개발하다보면 list-&gt;detail 패턴의 구조를 흔하게 작성하게 됩니다. list-detail 패턴이란 목록(list)에서 원하는 컨텐츠를 탐색 후 해당 컨텐츠의 상세한 정보를 보는 화면(detail)로 이동하는 방식을 말합니다. 이 때 detail 화면에서 <strong>뒤로 가기를 이용해 목록 화면으로 돌아올 경우 Angular는 해당 화면을 구성하는 컴포넌트를 처음부터 다시 생성(<code>ngOnInit</code> 실행)합니다.</strong> 이럴 경우엔 다음과 같은 문제가 발생합니다.</p>]]></description></item></channel></rss>